#!/bin/bash

# ============================================
# Secure 3x-ui Installer ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
# –ê–≤—Ç–æ—Ä: Max Galzer | https://github.com/maxgalzer
# ============================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root
if [[ "$EUID" -ne 0 ]]; then
  echo "‚ÄºÔ∏è –°–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root"
  exit 1
fi

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "üîß –£–∫–∞–∂–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
read -rp "‚û°Ô∏è  –ù–æ–≤—ã–π SSH-–ø–æ—Ä—Ç (–Ω–µ 22): " NEW_SSH_PORT
read -rp "‚û°Ô∏è  –ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏ 3x-ui: " XUI_PANEL_PORT
read -rp "‚û°Ô∏è  –ü–æ—Ä—Ç –∏–Ω–±–∞—É–Ω–¥–∞: " XUI_INBOUND_PORT
read -rp "‚û°Ô∏è  –î–æ–º–µ–Ω (–¥–ª—è SSL): " DOMAIN_NAME

echo ""
echo "üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
echo "SSH-–ø–æ—Ä—Ç:          $NEW_SSH_PORT"
echo "–ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏:       $XUI_PANEL_PORT"
echo "–ü–æ—Ä—Ç –∏–Ω–±–∞—É–Ω–¥–∞:     $XUI_INBOUND_PORT"
echo "–î–æ–º–µ–Ω:             $DOMAIN_NAME"
read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " CONFIRM
[[ "$CONFIRM" =~ ^[Yy]$ ]] || exit 1

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã..."
apt update -y

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ICMP ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é ICMP –≤ UFW..."
RULES_FILE="/etc/ufw/before.rules"
cp "$RULES_FILE" "${RULES_FILE}.bak"

awk '
  /# ok icmp codes for INPUT/ {
    print;
    print "-A ufw-before-input -p icmp --icmp-type destination-unreachable -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type time-exceeded -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type parameter-problem -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type echo-request -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type source-quench -j DROP";
    skip_input = 5;

    next
  }
  /# ok icmp code for FORWARD/ {
    print;
    print "-A ufw-before-forward -p icmp --icmp-type destination-unreachable -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type time-exceeded -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type parameter-problem -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type echo-request -j DROP";
    skip_forward = 4;

    next
  }
  skip_input > 0 { skip_input--; next }
  skip_forward > 0 { skip_forward--; next }
  { print }
' "${RULES_FILE}.bak" > "$RULES_FILE"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 3: –í–∫–ª—é—á–µ–Ω–∏–µ UFW –∏ —Ç–µ–∫—É—â–∏–π SSH-–ø–æ—Ä—Ç ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –í–∫–ª—é—á–∞–µ–º UFW –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ç–µ–∫—É—â–∏–π SSH-–ø–æ—Ä—Ç..."
CURRENT_PORT=$(ss -tnlp | grep sshd | awk -F':' '/sshd/ && $NF ~ /^[0-9]+$/ {print $NF; exit}')
ufw allow "$CURRENT_PORT"/tcp
ufw disable
ufw enable

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 3x-ui ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 3x-ui..."
bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 5: –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ufw allow "$XUI_PANEL_PORT"/tcp
ufw allow 80/tcp

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ–º–µ–Ω –≤ –ø–∞–Ω–µ–ª–∏..."
x-ui <<EOF
18
1
$DOMAIN_NAME

N
Y
EOF

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 7: –ó–∞–∫—Ä—ã—Ç–∏–µ 80 –∏ cron ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ufw deny 80/tcp
echo "[*] –î–æ–±–∞–≤–ª—è–µ–º cron –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL..."
CRON_JOB='22 4 * * * ufw allow 80/tcp && "/root/.acme.sh"/acme.sh --cron --home "/root/.acme.sh" > /dev/null && ufw deny 80/tcp'
(crontab -l 2>/dev/null | grep -v 'acme.sh.*--cron'; echo "$CRON_JOB") | crontab -

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 8: –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –∏–Ω–±–∞—É–Ω–¥–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
ufw allow "$XUI_INBOUND_PORT"/tcp

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –®–∞–≥ 9: –°–º–µ–Ω–∞ SSH-–ø–æ—Ä—Ç–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "[*] –ú–µ–Ω—è–µ–º SSH-–ø–æ—Ä—Ç –Ω–∞ $NEW_SSH_PORT..."
SSHD_CONFIG="/etc/ssh/sshd_config"
cp "$SSHD_CONFIG" "${SSHD_CONFIG}.bak"
sed -i "s/^#\?Port .*/Port $NEW_SSH_PORT/" "$SSHD_CONFIG"
ufw allow "$NEW_SSH_PORT"/tcp

echo "[*] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ SSH-–ø–æ—Ä—Ç–∞..."
systemctl reload ssh
sleep 2
if nc -z 127.0.0.1 "$NEW_SSH_PORT"; then
  echo "[‚úî] –ü–æ—Ä—Ç $NEW_SSH_PORT –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SSH..."
  systemctl restart ssh
  echo "[‚úÖ] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–∞–π—Å—è –ø–æ –ø–æ—Ä—Ç—É: $NEW_SSH_PORT"
else
  echo "[‚ùå] –ù–æ–≤—ã–π SSH-–ø–æ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥..."
  mv "${SSHD_CONFIG}.bak" "$SSHD_CONFIG"
  systemctl reload ssh
fi

