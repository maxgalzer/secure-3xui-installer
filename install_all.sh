#!/bin/bash

# ============================================
# Secure 3x-ui Installer (Ultimate Edition)
# –ê–≤—Ç–æ—Ä: Max Galzer | https://github.com/maxgalzer
# ============================================

set -e

# --- –û—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ needrestart –∏ –ª–∏—à–Ω–∏–π –º—É—Å–æ—Ä –≤ –≤—ã–≤–æ–¥–µ apt ---
export NEEDRESTART_MODE=a

if [[ "$EUID" -ne 0 ]]; then
  echo "‚ÄºÔ∏è –°–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root"
  exit 1
fi

# 1. –°–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
echo "üîß –£–∫–∞–∂–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
read -rp "‚û°Ô∏è  –ù–æ–≤—ã–π SSH-–ø–æ—Ä—Ç (–Ω–µ 22): " NEW_SSH_PORT
read -rp "‚û°Ô∏è  –ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏ 3x-ui: " XUI_PANEL_PORT
read -rp "‚û°Ô∏è  –ü–æ—Ä—Ç –∏–Ω–±–∞—É–Ω–¥–∞: " XUI_INBOUND_PORT
read -rp "‚û°Ô∏è  –î–æ–º–µ–Ω (–¥–ª—è SSL): " DOMAIN_NAME

read -rp "‚û°Ô∏è  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ SSL? (y/n): " TG_ENABLE
if [[ "$TG_ENABLE" =~ ^[Yy]$ ]]; then
    read -rp "    ‚û°Ô∏è  Telegram Bot Token: " TELEGRAM_TOKEN
    read -rp "    ‚û°Ô∏è  Telegram Chat ID: " TELEGRAM_CHAT_ID
    TG_STATUS="‚úÖ –í–∫–ª—é—á–µ–Ω—ã"
else
    TELEGRAM_TOKEN=""
    TELEGRAM_CHAT_ID=""
    TG_STATUS="‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"
fi

echo ""
echo "üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
echo "SSH-–ø–æ—Ä—Ç:          $NEW_SSH_PORT"
echo "–ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏:       $XUI_PANEL_PORT"
echo "–ü–æ—Ä—Ç –∏–Ω–±–∞—É–Ω–¥–∞:     $XUI_INBOUND_PORT"
echo "–î–æ–º–µ–Ω:             $DOMAIN_NAME"
echo "Telegram-–Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: $TG_STATUS"
[[ -n "$TELEGRAM_TOKEN" ]] && echo "Telegram Token:    $TELEGRAM_TOKEN"
[[ -n "$TELEGRAM_CHAT_ID" ]] && echo "Telegram Chat ID:  $TELEGRAM_CHAT_ID"
read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " CONFIRM
[[ "$CONFIRM" =~ ^[Yy]$ ]] || exit 1

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "[*] –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã –∏ —Å—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
apt update -y
apt install -y curl socat ufw git lsof

# 3. ICMP-–ø—Ä–∞–≤–∏–ª–∞ UFW
echo "[*] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é ICMP –≤ UFW..."
RULES_FILE="/etc/ufw/before.rules"
cp "$RULES_FILE" "${RULES_FILE}.bak"
awk '
  BEGIN { skip_input = 0; skip_forward = 0 }
  /# ok icmp codes for INPUT/ {
    print;
    print "-A ufw-before-input -p icmp --icmp-type destination-unreachable -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type time-exceeded -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type parameter-problem -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type echo-request -j DROP";
    print "-A ufw-before-input -p icmp --icmp-type source-quench -j DROP";
    skip_input = 5;
    next
  }
  /# ok icmp code for FORWARD/ {
    print;
    print "-A ufw-before-forward -p icmp --icmp-type destination-unreachable -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type time-exceeded -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type parameter-problem -j DROP";
    print "-A ufw-before-forward -p icmp --icmp-type echo-request -j DROP";
    skip_forward = 4;
    next
  }
  skip_input > 0 { skip_input--; next }
  skip_forward > 0 { skip_forward--; next }
  { print }
' "${RULES_FILE}.bak" > "$RULES_FILE"

# 4. –í–∫–ª—é—á–µ–Ω–∏–µ UFW –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ SSH-–ø–æ—Ä—Ç–∞
echo "[*] –í–∫–ª—é—á–∞–µ–º UFW –∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ç–µ–∫—É—â–∏–π SSH-–ø–æ—Ä—Ç..."

# –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –ø–æ—Ä—Ç –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
CURRENT_PORT=$(ss -tnlp | grep -w sshd | awk -F':' '/sshd/ && $NF ~ /^[0-9]+$/ {print $NF; exit}')
# –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —á–∏—Ç–∞–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
if [[ -z "$CURRENT_PORT" ]]; then
  CURRENT_PORT=$(grep -E '^Port ' /etc/ssh/sshd_config | head -n1 | awk '{print $2}')
fi
# –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—É—Å—Ç–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º 22 (–ø–æ –¥–µ—Ñ–æ–ª—Ç—É)
if [[ -z "$CURRENT_PORT" ]]; then
  CURRENT_PORT=22
fi

ufw allow "$CURRENT_PORT"/tcp
ufw disable
ufw enable

# 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 3x-ui
echo "[*] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 3x-ui..."
bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)

# 6. –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤
ufw allow "$XUI_PANEL_PORT"/tcp
ufw allow "$XUI_INBOUND_PORT"/tcp
ufw allow 80/tcp

# 7. SSL: acme.sh –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo "[*] –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º x-ui –¥–ª—è SSL..."
systemctl stop x-ui || true
sleep 2

if [ ! -d "$HOME/.acme.sh" ]; then
  curl https://get.acme.sh | sh
  source ~/.bashrc || true
fi

echo "[*] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SSL –¥–ª—è $DOMAIN_NAME..."
~/.acme.sh/acme.sh --issue --standalone -d "$DOMAIN_NAME" --force

if [ ! -f "/root/.acme.sh/$DOMAIN_NAME/fullchain.cer" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç. –ü—Ä–æ–≤–µ—Ä—å –¥–æ–º–µ–Ω!"
    exit 1
fi

echo "[*] –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è x-ui..."
cp "/root/.acme.sh/$DOMAIN_NAME/fullchain.cer" "/usr/local/x-ui/bin/cert.crt"
cp "/root/.acme.sh/$DOMAIN_NAME/$DOMAIN_NAME.key" "/usr/local/x-ui/bin/private.key"

systemctl start x-ui
sleep 2
ufw deny 80/tcp

# 8. Renew SSL + Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [[ "$TG_ENABLE" =~ ^[Yy]$ ]]; then
cat <<EOF > /root/renew_ssl.sh
#!/bin/bash

export NEEDRESTART_MODE=a
LOGFILE="/var/log/ssl_renew.log"
TELEGRAM_TOKEN="${TELEGRAM_TOKEN}"
TELEGRAM_CHAT_ID="${TELEGRAM_CHAT_ID}"
DOMAIN_NAME="${DOMAIN_NAME}"

NOW=\$(date '+%Y-%m-%d %H:%M:%S')
SERVER_IP=\$(curl -s ifconfig.me)
STATUS=""

{
  echo ""
  echo "===== [\${NOW}] üîê SSL –û–ë–ù–û–í–õ–ï–ù–ò–ï ====="
  echo "[IP] \${SERVER_IP}"
  ufw allow 80/tcp
  ~/.acme.sh/acme.sh --issue --standalone -d "\$DOMAIN_NAME" --force
  RENEW_EXIT=\$?
  cp "/root/.acme.sh/\$DOMAIN_NAME/fullchain.cer" "/usr/local/x-ui/bin/cert.crt"
  cp "/root/.acme.sh/\$DOMAIN_NAME/\$DOMAIN_NAME.key" "/usr/local/x-ui/bin/private.key"
  systemctl restart x-ui
  ufw deny 80/tcp

  if [[ \$RENEW_EXIT -eq 0 ]]; then
    STATUS="‚úÖ –£–°–ü–ï–®–ù–û"
  else
    STATUS="‚ùå –û–®–ò–ë–ö–ê (–ö–æ–¥: \$RENEW_EXIT)"
  fi

  echo "[ACME] –°–ø–∏—Å–æ–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:"
  ~/.acme.sh/acme.sh --list

  echo "===== –ó–∞–≤–µ—Ä—à–µ–Ω–æ [\${NOW}] \$STATUS ====="
} >> "\$LOGFILE" 2>&1

CERT_LIST=\$( ~/.acme.sh/acme.sh --list | tail -n +2 | awk '{printf "%s ‚Äî %s ‚ûú %s\\n", \$1, \$4, \$5}' | head -n 5 )

MESSAGE=\$(cat <<EOM
üîê <b>SSL –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</b>
üìÖ <b>\${NOW}</b>
üåê <b>IP:</b> <code>\${SERVER_IP}</code>
üìä <b>–°—Ç–∞—Ç—É—Å:</b> \$STATUS

<pre>\$CERT_LIST</pre>
EOM
)

curl -s -X POST "https://api.telegram.org/bot\${TELEGRAM_TOKEN}/sendMessage" \
  -d chat_id="\${TELEGRAM_CHAT_ID}" \
  -d text="\$MESSAGE" \
  -d parse_mode="HTML"
EOF

chmod +x /root/renew_ssl.sh
(crontab -l 2>/dev/null | grep -v 'renew_ssl.sh'; echo "22 4 * * * /root/renew_ssl.sh") | crontab -
fi

# 9. –í —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ: –º–µ–Ω—è–µ–º SSH-–ø–æ—Ä—Ç
echo "[*] –ú–µ–Ω—è–µ–º SSH-–ø–æ—Ä—Ç –Ω–∞ $NEW_SSH_PORT..."
SSHD_CONFIG="/etc/ssh/sshd_config"
cp "$SSHD_CONFIG" "${SSHD_CONFIG}.bak"
sed -i "s/^#\?Port .*/Port $NEW_SSH_PORT/" "$SSHD_CONFIG"
ufw allow "$NEW_SSH_PORT"/tcp

echo "[*] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ SSH-–ø–æ—Ä—Ç–∞..."
systemctl reload ssh
sleep 2
if nc -z 127.0.0.1 "$NEW_SSH_PORT"; then
  echo "[‚úî] –ü–æ—Ä—Ç $NEW_SSH_PORT –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SSH..."
  systemctl restart ssh
  echo "[‚úÖ] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–∞–π—Å—è –ø–æ –ø–æ—Ä—Ç—É: $NEW_SSH_PORT"
  SSH_CHANGED=1
else
  echo "[‚ùå] –ù–æ–≤—ã–π SSH-–ø–æ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥..."
  mv "${SSHD_CONFIG}.bak" "$SSHD_CONFIG"
  systemctl reload ssh
  SSH_CHANGED=0
fi

# --- –ò—Ç–æ–≥–æ–≤—ã–π –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á—ë—Ç ---
clear
echo -e "\n\033[1;34m==========  –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê  ==========\033[0m\n"
echo -e "  \033[1;32m‚úî –ü–æ—Ä—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏–∑–º–µ–Ω—ë–Ω\033[0m"
echo -e "  \033[1;32m‚úî 3x-ui —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω\033[0m"
echo -e "  \033[1;32m‚úî SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞ –≤—ã–¥–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á—ë–Ω\033[0m"
if [[ "$TG_ENABLE" =~ ^[Yy]$ ]]; then
  echo -e "  \033[1;32m‚úî –ù–∞—Å—Ç—Ä–æ–µ–Ω –∫—Ä–æ–Ω –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram\033[0m"
else
  echo -e "  \033[1;33m‚úò –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã (–ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É)\033[0m"
fi
echo -e "  \033[1;32m‚úî –û—Ç–∫—Ä—ã—Ç—ã –ø–æ—Ä—Ç—ã:\033[0m"
echo -e "       - SSH (–Ω–æ–≤—ã–π):   \033[1;36m$NEW_SSH_PORT\033[0m"
echo -e "       - 3x-ui –ø–∞–Ω–µ–ª—å:  \033[1;36m$XUI_PANEL_PORT\033[0m"
echo -e "       - –ò–Ω–±–∞—É–Ω–¥:       \033[1;36m$XUI_INBOUND_PORT\033[0m"
echo -e "  \033[1;32m‚úî –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –∑–∞–∫—Ä—ã—Ç—ã (UFW –∞–∫—Ç–∏–≤–µ–Ω)\033[0m"
if [[ "$SSH_CHANGED" == "1" ]]; then
  echo -e "\n  \033[1;36m–ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –ø–æ –Ω–æ–≤–æ–º—É –ø–æ—Ä—Ç—É SSH: $NEW_SSH_PORT\033[0m"
else
  echo -e "\n  \033[1;31mSSH-–ø–æ—Ä—Ç –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–∂–Ω–∏–º! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä—É—á–Ω—É—é!\033[0m"
fi
echo -e "\n\033[1;34m===========================================\033[0m\n"
